basePath: /api/
definitions:
  domain.CategoryRegister:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  domain.CategoryUpdate:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  domain.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.MailLabelRegister:
    properties:
      category_id:
        type: integer
      mail_id:
        type: integer
      user_id:
        type: integer
    required:
    - category_id
    - mail_id
    - user_id
    type: object
  domain.MailRegister:
    properties:
      attachment:
        type: string
      from:
        type: string
      message:
        type: string
      star:
        type: boolean
      subtitle:
        type: string
      title:
        type: string
      to:
        type: string
    required:
    - message
    - subtitle
    - title
    - to
    type: object
  domain.Register:
    properties:
      email:
        type: string
      keygen_id:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  web.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:4000
info:
  contact:
    email: rulanugrh@proton.me
    name: Kyora
    url: https://github.com/rulanugrh
  description: Documentation for API OpenPGP with HTMX
  license:
    name: MIT
  termsOfService: https://swagger.io/terms
  title: Megaclite API Documentation
  version: "1.0"
paths:
  /api/category/create:
    post:
      consumes:
      - application/json
      operationId: create
      parameters:
      - description: request body for create new category
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CategoryRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: create category
      tags:
      - categories
  /api/category/delete/{id}:
    delete:
      consumes:
      - application/json
      operationId: delete
      parameters:
      - description: id category
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: delete category by id
      tags:
      - categories
  /api/category/update/{id}:
    put:
      consumes:
      - application/json
      operationId: update
      parameters:
      - description: request body for updated data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CategoryUpdate'
      - description: id category
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: update category by id
      tags:
      - categories
  /api/label/add:
    post:
      consumes:
      - application/json
      operationId: adding
      parameters:
      - description: body request for add label mail
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.MailLabelRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: add mail to label
      tags:
      - labelings
  /api/label/get/{user_id}/{category}:
    get:
      consumes:
      - application/json
      operationId: findByCategory
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: category id
        in: path
        name: category
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: find by category
      tags:
      - labelings
  /api/label/update/{id}:
    put:
      consumes:
      - application/json
      operationId: updateLabel
      parameters:
      - description: request body for update label
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.MailLabelRegister'
      - description: parameter id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: update label by user id
      tags:
      - labelings
  /api/mail/create:
    post:
      consumes:
      - application/json
      operationId: createMail
      parameters:
      - description: request body for create mail
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.MailRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: create new mail
      tags:
      - mails
  /api/mail/delete/{id}:
    delete:
      consumes:
      - application/json
      operationId: deleteMailByID
      parameters:
      - description: id email
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: '"delete mail by id"'
      tags:
      - mails
  /api/mail/find/{id}:
    get:
      consumes:
      - application/json
      operationId: getByID
      parameters:
      - description: id mail
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: '"get mails by id"'
      tags:
      - mails
  /api/mail/inbox:
    get:
      consumes:
      - application/json
      operationId: getAll
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: get all inbox email
      tags:
      - mails
  /api/mail/send:
    get:
      consumes:
      - application/json
      operationId: getSendMail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: get all sent email
      tags:
      - mails
  /api/user/{emails}:
    get:
      consumes:
      - application/json
      operationId: get_by_emails
      parameters:
      - description: Emails User
        in: path
        name: emails
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: get user by emails
      tags:
      - users
  /api/user/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: request body for login existing account
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: login user
      tags:
      - users
  /api/user/register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: request body for new user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: register new account
      tags:
      - users
swagger: "2.0"
